[
  {
    "path": "posts/2021-01-26-dataviz-makeover-1/",
    "title": "DataViz Makeover 1",
    "description": "Suggesting ways for improving and reworking the original data visualisation. \n\nHighlight what works and what doesn’t. Explain why those things don’t work, and how you can make it better. Use the fields in the data set provided and improve upon the original visualisations. However, if supplementing other data sources helps to tell a better story, go for it!",
    "author": [
      {
        "name": "Yi Heen, Boey",
        "url": "https://www.linkedin.com/in/yiheen-boey/"
      }
    ],
    "date": "2021-01-26",
    "categories": [],
    "contents": "\r\n1 - Critique the visualization\r\nIdentify at least three from each evaluation criterion (Clarity and aesthetics)\r\n\r\n\r\n\r\nFigure 1: The original data visualization\r\n\r\n\r\n\r\n1.1 Clarity\r\n1.1.1 Unclear title\r\nThe title “Resident Labour Force by Age” was used for the visualization. This is unclear and does not inform the reader quickly what the visualization is depicting which is the comparison of labour force by age groups between 2009 and 2019.\r\nSuggestion - Change title\r\nUse the title “Resident Labour Force by Age Groups, June 2009 vs June 2019”\r\n1.1.2 Wrong visualization used for the given datatype\r\nAge groups are a categorical datatype instead. The line graph being used currently is better suited for continuous datatypes\r\nSuggestion - Change Visualization Type\r\nSwitch to using a bar graph instead of a line graph.\r\nEnsure Vertical Axis starts at zero\r\n1.1.3 Plotting a median line on categorical scale\r\nData has already been binned into age groups. There is no way of calculating a discrete age for median like 41. If there is a median, it should be the age group of 40-44. i.e. Both groups will have the same median.\r\nSuggestion - Remove the median lines\r\nMark the bars for 40-44 with a label to show that the median falls within that category.\r\n1.1.4 Percentages can omit context\r\nUsing percentages like the Labour force participation rate can omit important contextual information like the true number of people in each age group.\r\nSuggestion - Plot the bar graph with actual numbers instead of percentages\r\nBar graphs should be sufficient to show the differences in proportions across different categories\r\n1.1.5 Unclear description of percentages points\r\nWhen comparing percentages across different groups and time periods, the term to be used should be percentage points. While the write up does not use the words percentage change, it can be ambiguous.\r\nSuggestion - Clarify the changes in percentages.\r\nPoints being made on changes in percentages such as “Declined from 75% to 67%” can be rewritten as “Declined 8 percentage points from 75% to 67%”.\r\n1.1.6 Write up not aligned with visualization\r\nThe opening line of the write up refers to LFPR (Labour Force Participation Rate) whereas the visualization depicts the proportion of labour force. There is no data visualization to that readers can refer to while reading statements related to LFPR.\r\nSuggestion - Include a second visualization on Labour Force Participation\r\nWith all the clarity and aesthetic suggestions included. Use Table 5 on labour force and Table 7 on participation rates to get numbers by age group for labour force participation. Together, the two graphs will give a clearer idea of how much labour force participation there is with respect to the resident labour force size.\r\n1.2 Aesthetics\r\n1.2.1 Missing vertical axis and gridlines\r\nVertical axis is missing, and gridlines are not present on the vertical axis. This can make comparison across different age groups difficult. The units for the vertical axis “Per Cent” is put under the title as well.\r\nSuggestion - Add in missing elements\r\nVertical axis should be added to the visualization\r\nGridlines and tick marks on the vertical axis should be added\r\nLabel Vertical axis title as “Resident Labour Force (‘000s)”\r\n1.2.2 Good use of Colours\r\nGood consistent (e.g. lines, labels, data table) use of colours to differentiate between 2009 and 2019.\r\nSuggestion - Follow and recreate a similar aesthetic.\r\nEnsure colours and format are replicated across both graphs.\r\n1.2.3 Good use of space and colouring\r\nFollowing on from point S2, the colours have already well marked out the datapoints and features relating to 2009 and 2019. It would be superfluous to add in a legend.\r\nSuggestion - Follow and recreate a similar aesthetic.\r\nSwitching to a grouped bar chart would mean the colors will be important for readers to tell the different categories apart. Ensure that a legend is included and consistent across both charts.\r\n1.2.4 Missing horizontal axis label\r\nHorizontal axis label is missing. Although it can be inferred based on the categories and the title of the visualization. It would be better if the axis is clearly labelled.\r\nSuggestion - Add in missing elements\r\nLabel horizontal axis title as “Age Groups”\r\nGridlines and tick marks will not be needed as visualization will be changed to a bar graph.\r\n2 - A sketch of the improved visualization\r\nWith reference to the critics above, suggest alternative graphical presentation to improve the current design. The proposed alternative data visualisation must be in static form. Sketch out the proposed design. Support your design by describing the advantages or which part of the issue(s) your alternative design tries to overcome.\r\n\r\n\r\n\r\nFigure 2: A sketch of the suggested visualizatons\r\n\r\n\r\n\r\n3 - The improved data visualization\r\nUsing Tableau, design the proposed data visualization.\r\n\r\n\r\n\r\nFigure 3: The improved data visualization\r\n\r\n\r\n\r\n4 - The data preparation process\r\nProvide step-by-step description on how the data visualization was prepared.\r\n4.1 Data Sources Used:\r\nRESIDENT LABOUR FORCE AGED FIFTEEN YEARS AND OVER BY AGE AND SEX, 2009 - 2019 (JUNE) - Table 7\r\nRESIDENT LABOUR FORCE PARTICIPATION RATE BY AGE AND SEX, 2009 - 2019 (JUNE) - TABLE 5\r\n4.2 Steps taken for first Visualization\r\n\r\nFigure 4: Original (TOTAL) Dataset in table 7\r\nUsing the (TOTAL) sheet in table 7 (mrsd_2019LabourForce_T7.xlsx), select and preserve only the required data. i.e. Age groups, 2009 and 2019. Delete all other rows (including the total row) and columns (and blank columns).\r\nRename “Age (Years)” to “Age Groups”\r\nRemove whitespaces in data. e.g. “15 - 19” to “15-19” and “70 and over” to “>=70” to maximise use of space.\r\n\r\nFigure 5:Remaining Dataset after trimmingSave the excel file,create a new Tableau workbook and load the file (mrsd_2019LabourForce_T7.xlsx) into Tableau. Ensure that the datasheet (T7_T) is loaded correctly and the datatypes are correctly identifed by tableau.\r\n\r\nData Imported into Tableau and their datatypes\r\nSwitch to Sheet 1 and rename it “Visual 1” in Tableau\r\nDrag Age Groups into columns and 2009 / 2019 into rows as seen in the screenshot below.\r\n\r\nDragging fields into rows and columns\r\nDrag the values for 2019 on the same vertical axis where the 2009 values are plotted.\r\n\r\nPlotting the data for 2009 and 2019 on the same axes\r\nDrag measure names onto color in order to add color to the grouped bar chart. The bars are now color coded by year.\r\n\r\nGetting your bar chart color coded by year\r\nHide the headers showing 2009 and 2019 at the bottom of the bar chart as they are no longer necessary.\r\nRename vertical axis and include units: “Resident Labour Force (’000s)”\r\nAdd in an annotation to indicate the median group which is 40-44 for both 2009 and 2019.\r\nRename visualization to: “Resident Labour Force by Age Groups, June of 2009 & 2019”\r\n\r\nAdding finishing touches and labels\r\nRename the title of the legend from Measure Names to Year\r\n\r\nRenaming the legend\r\nFinally, set the axis range to be from 0 to 300 so that sizes of the bars are compararble across both visualizations.\r\n\r\nMaking the bar charts of similar size scales\r\n4.3 Steps taken for second Visualization\r\n\r\nOriginal Dataset in table 5\r\nSimilarly, using the (TOTAL) sheet in table 5 (mrsd_2019LabourForce_T5.xlsx), select and preserve only the required data. i.e. Age groups, 2009 and 2019. Delete all other rows (including the total row) and columns (and blank columns).\r\nRename “Age (Years)” to “Age Groups”\r\nRemove whitespaces in data. e.g. “15 - 19” to “15-19” and “70 and over” to “>=70” to maximise use of space.\r\n\r\nRemaining Dataset of labour force participation rates (%) after trimming\r\nSave the excel file and load it (mrsd_2019LabourForce_T5.xlsx) into the same Tableau workbook. Drag the new required datasource (T5_T) into use.\r\nEnsure that the datasheet (T5-T) is loaded correctly and the datatypes are correctly identifed by tableau.Also ensure that the relationship between T5_T and T7_T is correctly identifed. i.e. Using the Age Group columns in both datasets to create a relationship.\r\n\r\nImporting T5_T into the same Tableau Workbook and creating a relationship\r\nCreate a new sheet in the Tableau workbook and rename it “Visual 2”.\r\nFrom the data fields available. Create two new calculated field to find the number of participants in the labour force in each year. Name them as “2009 Labour Force Participants” and “2019 Labour Force Participants”. The equation is shown below.\r\n\\[Resident Labour Force * Labour Force Participation Rate / 100\\]\r\n\r\nUsing calculated fields to find the actual number of people participating in the labour force\r\nDrag Age Groups into columns and 2009 Labour Force Participants / 2019 Labour Force Participants into rows as seen in the screenshot below.\r\n\r\nDragging fields into rows and columns\r\nDrag the values for 2019 Labour Force Participants on the same vertical axis where the 2009 Labour Force Participants values are plotted.\r\n\r\nPlotting the data for 2009 and 2019 on the same axes\r\nDrag measure names onto color in order to add color to the grouped bar chart. The bars are now color coded by year.\r\nEnsure that the colors are consistent with visual 1. Blue for 2009 and Orange for 2019.\r\n\r\nKeeping colors consistent across visuals will make cross referencing intuitive\r\nHide the headers showing 2009 Labour Force Participants and 2019 Labour Force Participants at the bottom of the bar chart as they are no longer necessary.\r\nRename vertical axis and include units: “Labour Force Participants (’000s)”\r\nRename visualization to: “Labour Force Participants by Age Groups, June of 2009 & 2019”\r\nFinally, set the axis range to be from 0 to 300 so that sizes of the bars are compararble across both visualizations.\r\n\r\nMaking the bar charts of similar size scales\r\n4.4 Pulling it all into a dashboard\r\nCreate a new dashboard and name it “Singapore Resident Labour Force and Participants 2009 vs 2019”\r\nDrag Visual 1 and Visual 2 onto the dashboard canvas in a top and bottom layout.\r\nReduce font size of chart titles to 10 to give more screen space to the chart in order to convey information\r\n\r\nInitial Layout of the dashboard with reduced title font sizes\r\nRemove one of the legends from the dashboard as the legend is designed to be consistent across both charts.\r\n\r\nRemoving a redundant legend\r\nUpdate the title of the respective charts to\r\n“Resident Labour Force in Singapore by Age Groups, June of of 2009 & 2019”\r\n“Labour Force Participants in Singapore by Age Groups, June of 2009 & 2019”\r\n5 - New insights\r\nDescribe three major observations revealed by the data visualisation prepared.\r\n5.1\r\n5.2\r\n5.3\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-28T01:25:18+08:00",
    "input_file": "dataviz-makeover-1.utf8.md"
  },
  {
    "path": "posts/2021-01-16-my-first-post/",
    "title": "My First Post",
    "description": "A trial of git and netlify.",
    "author": [
      {
        "name": "Yi Heen, Boey",
        "url": "https://www.linkedin.com/in/yiheen-boey/"
      }
    ],
    "date": "2021-01-16",
    "categories": [],
    "contents": "\r\n1.0 Overview\r\nCorrelation coefficient is a popular statistic that use to measure the type and strength of the relationship between two variables. The values of a correlation coefficient ranges between -1.0 and 1.0. A correlation coefficient of 1 shows a perfect linear relationship between the two variables, while a -1.0 shows a perfect inverse relationship between the two variables. A correlation coeficient of 0.0 shows no linear relationship between the two variables.\r\nWhen multivariate data are used, the correlation coeficeints of the pair comparisons are displayed in a table form known as correlation matrix or scatterplot matrix.\r\nThere are three broad reasons for computing a correlation matrix.\r\nTo reveal the relationship between highdimensional variables pairwisely.\r\nTo input into other analyses. For example, people commonly use correlation matrixes as inputs for exploratory factor analysis, confirmatory factor analysis, structural equation models, and linear regression when excluding missing values pairwise.\r\nAs a diagnostic when checking other analyses. For example, with linear regression a high amount of correlations suggests that the linear regression’s estimates will be unreliable.\r\nWhen the data is large, both in terms of the number of observations and the number of variables, Corrgram tend to be used to visually explore and analyse the structure and the patterns of relations among variables. It is designed based on two main schemes:\r\nRendering the value of a correlation to depict its sign and magnitude, and\r\nReordering the variables in a correlation matrix so that “similar” variables are positioned adjacently, facilitating perception.\r\nIn this hands-on exercise, you will learn how to plot data visualisation for visualising correlation matrix with R. It consists of three main sections. First, you will learn how to create correlation matrix using pairs() of R Graphics. Next, you will learn how to plot corrgram using corrplot package of R Lastly, you will learn how to create an interactive correlation matrix using plotly R. .\r\n2.0 Installing and Launching R Packages\r\nBefore you get started, you are required:\r\nto start a new R project, and\r\nto create a new R Markdown document.\r\nNext, you will use the code chunk below to install and launch corrplot, ggpubr, plotly and tidyverse in RStudio.\r\n\r\n\r\npackages = c('ggpubr', 'tidyverse')\r\n\r\nfor(p in packages){library\r\n  if(!require(p, character.only = T)){\r\n    install.packages(p)\r\n  }\r\n  library(p, character.only = T)\r\n}\r\n\r\n\r\n\r\n3.0 Importing and Preparing The Data Set\r\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\r\n3.1 Importing Data\r\nFirst, let us import the data into R by using read_csv() of readr package.\r\n\r\n\r\nwine <- read_csv(\"data/wine_quality.csv\")\r\n\r\n\r\n\r\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\r\n4.0 Univariate EDA with Histogram\r\nIn the figure below, multiple histograms are plottted to reveal the distribution of the selected variables in the wine quality data sets.\r\n\r\n\r\n\r\nThe code chunks used to create the data visualisation consists of two main parts. First, we will create the individual histograms using the code chunk below.\r\n\r\n\r\nfa <- ggplot(data=wine, aes(x= `fixed acidity`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nva <- ggplot(data=wine, aes(x= `volatile acidity`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nca <- ggplot(data=wine, aes(x= `citric acid`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nrs <- ggplot(data=wine, aes(x= `residual sugar`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nch <- ggplot(data=wine, aes(x= `chlorides`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nfSO2 <- ggplot(data=wine, aes(x= `free sulfur dioxide`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\ntSO2 <- ggplot(data=wine, aes(x= `total sulfur dioxide`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\ndensity <- ggplot(data=wine, aes(x= density)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\npH <- ggplot(data=wine, aes(x= pH)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nsulphates <- ggplot(data=wine, aes(x= sulphates)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nalcohol <- ggplot(data=wine, aes(x= alcohol)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\n\r\n\r\n\r\nNext, the ggarrange function of ggpur package is used to group these histograms together.\r\n\r\n\r\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, \r\n          ncol = 4, nrow = 3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-01-16-my-first-post/my-first-post_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-01-26T21:53:23+08:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Hi there!",
    "description": "Welcome to my data visualization blog. I hope you enjoy \nreading what I share and any insights gleaned from this blog.",
    "author": [
      {
        "name": "Yi Heen, Boey",
        "url": "https://www.linkedin.com/in/yiheen-boey/"
      }
    ],
    "date": "2021-01-11",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-26T22:04:37+08:00",
    "input_file": {}
  }
]
